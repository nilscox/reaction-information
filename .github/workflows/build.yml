name: build

on: [push]

env:
  API_IMAGE: nilscox/zetecom-api

jobs:
  # build

  api:
    name: build api
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: whoan/docker-build-with-cache-action@v5
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          image_name: nilscox/zetecom-api
          image_tag: ${{ github.sha }}
          context: ./api

  app:
    name: build app
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/app-infra
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
          cache: "yarn"
          cache-dependency-path: |
            packages/app-core/yarn.lock
            packages/app-infra/yarn.lock
      - run: yarn install --frozen-lockfile
        working-directory: packages/app-core
      - run: yarn install --frozen-lockfile
      - run: yarn build
        env:
          NODE_ENV: production
          BASENAME: /
          API_URL: __API_URL__
          WEBSITE_URL: __WEBSITE_URL__
          ANALYTICS_URL: __ANALYTICS_URL__
          ANALYTICS_SITE_ID: __ANALYTICS_SITE_ID__
      - uses: actions/upload-artifact@v2
        with:
          name: app
          path: packages/app-infra/dist

  build-publish-demo:
    name: build and publish demo
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    defaults:
      run:
        working-directory: packages/app-infra
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
          cache: "yarn"
          cache-dependency-path: |
            packages/app-core/yarn.lock
            packages/app-infra/yarn.lock
      - run: yarn --frozen-lockfile
        working-directory: packages/app-core
      - run: yarn --frozen-lockfile
      - run: yarn build:demo
        env:
          NODE_ENV: production
          BASENAME: /zetecom
          WEBSITE_URL: https://zetecom.fr
          ANALYTICS_SITE_ID: stub
      - uses: JamesIves/github-pages-deploy-action@4.1.0
        with:
          branch: gh-pages
          folder: packages/app-infra/demo

  build-extension:
    name: build extension
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - run: if [ '${{ github.ref }}' = 'refs/heads/master' ]; then echo "environment=production" >> $GITHUB_ENV; fi
      - run: if [ '${{ github.ref }}' != 'refs/heads/master' ]; then echo "environment=staging" >> $GITHUB_ENV; fi
      - run: echo "extension_version=$(node -e $'console.log(require(\'./extension/package.json\').version)')" >> $GITHUB_ENV
      - run: yarn zip "$environment"
        working-directory: ./extension
      - run: echo "extension_zip=zetecom-extension-${{ env.environment }}-${{ env.extension_version }}" >> $GITHUB_ENV
      - run: mkdir -p artifacts/build && cd artifacts/build && unzip "../../extension/$extension_zip"
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.extension_zip }}
          path: artifacts/build
      - run: echo "extension_sources_zip=zetecom-extension-${{ env.environment }}-sources-${{ env.extension_version }}" >> $GITHUB_ENV
      - run: mkdir -p artifacts/sources && cd artifacts/sources && unzip "../../extension/$extension_sources_zip"
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.extension_sources_zip }}
          path: artifacts/sources

  build-website:
    name: build website
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: website
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
          cache: "yarn"
          cache-dependency-path: website/yarn.lock
      - run: yarn install --frozen-lockfile
      - run: yarn build

  # code quality

  code-quality:
    name: code quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - run: yarn --frozen-lockfile
        working-directory: ./api
      - run: yarn lint
        working-directory: ./api
      - run: yarn test:unit
        working-directory: ./api
      - run: yarn --frozen-lockfile
        working-directory: ./packages/app-core
      - run: yarn lint
        working-directory: ./packages/app-core
      - run: yarn test
        working-directory: ./packages/app-core
      - run: yarn --frozen-lockfile
        working-directory: ./packages/app-infra
      - run: yarn lint
        working-directory: ./packages/app-infra
      - run: yarn test
        working-directory: ./packages/app-infra
      - run: yarn --frozen-lockfile
        working-directory: ./extension
      - run: yarn test
        working-directory: ./extension
      - run: yarn --frozen-lockfile
        working-directory: ./website
      - run: yarn lint
        working-directory: ./website

  # e2e

  api-e2e:
    name: api end-to-end tests
    runs-on: ubuntu-latest
    needs: [api]
    defaults:
      run:
        working-directory: ./api
    steps:
      - uses: harmon758/postgresql-action@v1
        with:
          postgresql version: "11.5"
          postgresql db: "test"
          postgresql user: "root"
          postgresql password: "root"
      - uses: actions/checkout@v2
      - run: yarn
      - run: yarn test:intg
      - run: yarn test:e2e

  e2e:
    name: end-to-end tests
    runs-on: ubuntu-latest
    needs: [api, app]
    defaults:
      run:
        working-directory: ./e2e
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: app
          path: e2e/app-dist
      - run: ../packages/app-infra/replace-env.sh ./app-dist
        env:
          API_URL: "http://localhost:3000"
          WEBSITE_URL: "http://localhost:8081"
          ANALYTICS_URL: ""
          ANALYTICS_SITE_ID: "stub"
      - run: mkdir -p ./artifacts/screenshots
      - run: yarn docker-compose:ci up -d
        env:
          GIT_SHA: ${{ github.sha }}
      - run: docker logs -f zc-api > ./artifacts/api.log &
      - run: yarn --frozen-lockfile
      - run: yarn build
      - run: yarn serve -l 7357 build &
      - run: yarn serve -s -l 8000 app-dist &
      - run: yarn wait-on -t $((30 * 1000)) http://localhost:3000/api/healthcheck
      - run: yarn test:headless --screenshots-dir ./artifacts/screenshots
      - uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        with:
          name: e2e-artifacts
          path: e2e/artifacts

  # publish

  publish-api:
    name: publish api docker image
    runs-on: ubuntu-latest
    needs: [api-e2e, e2e, code-quality]
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev'
    steps:
      - run: ref=${{ github.ref }}; echo "tag=${ref#refs/heads/}" >> $GITHUB_ENV
      - run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      - run: docker pull $API_IMAGE:${{ github.sha }}
      - run: docker tag $API_IMAGE:${{ github.sha }} "$API_IMAGE:$tag"
      - run: docker push "$API_IMAGE:$tag"

  # deploy staging

  deploy-api-staging:
    name: deploy api staging
    runs-on: ubuntu-latest
    environment: staging
    if: github.ref == 'refs/heads/dev'
    needs: [publish-api]
    steps:
      - uses: nilscox/zetecom/.github/actions/deployment/deploy-api@dev
        with:
          environment: staging
          image: $API_IMAGE:dev
          base-dir: ${{ secrets.DEPLOY_BASE_DIR }}
          docker-host: ${{ secrets.DEPLOY_DOCKER_HOST }}
          docker-authentication: ${{ secrets.DEPLOY_DOCKER_AUTHENTICATION }}
          listen-port: ${{ secrets.API_LISTEN_PORT }}
          admin-user: ${{ secrets.API_ADMIN_USER }}
          reflect-origin: true
          app-url: https://app-staging.zetecom.fr
          website-url: https://staging.zetecom.fr
          db-host: ${{ secrets.API_DB_HOST }}
          db-port: ${{ secrets.API_DB_PORT }}
          db-user: ${{ secrets.API_DB_USER }}
          db-pass: ${{ secrets.API_DB_PASS }}
          db-name: ${{ secrets.API_DB_NAME }}
          redis-host: ${{ secrets.API_REDIS_HOST }}
          redis-port: ${{ secrets.API_REDIS_PORT }}
          email-host: ${{ secrets.API_EMAIL_HOST }}
          email-port: ${{ secrets.API_EMAIL_PORT }}
          email-user: ${{ secrets.API_EMAIL_USER }}
          email-password: ${{ secrets.API_EMAIL_PASSWORD }}
          email-secure: ${{ secrets.API_EMAIL_SECURE }}
          email-bypass: false
          email-account-verification: true
          email-from: ${{ secrets.API_EMAIL_FROM }}
          session-secret: ${{ secrets.API_SESSION_SECRET }}

  deploy-app-staging:
    name: deploy app staging
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://app-staging.zetecom.fr
    if: github.ref == 'refs/heads/dev'
    needs: [app, code-quality, e2e, deploy-api-staging]
    steps:
      - uses: nilscox/zetecom/.github/actions/deployment/deploy-app@dev
        with:
          deploy-host: ${{ secrets.DEPLOY_HOST }}
          deploy-user: ${{ secrets.DEPLOY_USER }}
          deploy-key: ${{ secrets.DEPLOY_KEY }}
          base-dir: ${{ secrets.DEPLOY_BASE_DIR }}
          api-url: https://app-staging.zetecom.fr
          website-url: https://staging.zetecom.fr
          analytics-provider: ${{ secrets.APP_ANALYTICS_PROVIDER }}
          analytics-url: ${{ secrets.APP_ANALYTICS_URL }}
          analytics-site-id: ${{ secrets.APP_ANALYTICS_SITE_ID }}

  # deploy production

  deploy-api-production:
    name: deploy api production
    runs-on: ubuntu-latest
    environment: production
    if: github.ref == 'refs/heads/master'
    needs: [publish-api]
    steps:
      - uses: nilscox/zetecom/.github/actions/deployment/deploy-api@master
        with:
          environment: production
          image: $API_IMAGE:master
          base-dir: ${{ secrets.DEPLOY_BASE_DIR }}
          docker-host: ${{ secrets.DEPLOY_DOCKER_HOST }}
          docker-authentication: ${{ secrets.DEPLOY_DOCKER_AUTHENTICATION }}
          listen-port: ${{ secrets.API_LISTEN_PORT }}
          admin-user: ${{ secrets.API_ADMIN_USER }}
          reflect-origin: false
          app-url: https://app.zetecom.fr
          website-url: https://zetecom.fr
          db-host: ${{ secrets.API_DB_HOST }}
          db-port: ${{ secrets.API_DB_PORT }}
          db-user: ${{ secrets.API_DB_USER }}
          db-pass: ${{ secrets.API_DB_PASS }}
          db-name: ${{ secrets.API_DB_NAME }}
          redis-host: ${{ secrets.API_REDIS_HOST }}
          redis-port: ${{ secrets.API_REDIS_PORT }}
          email-host: ${{ secrets.API_EMAIL_HOST }}
          email-port: ${{ secrets.API_EMAIL_PORT }}
          email-user: ${{ secrets.API_EMAIL_USER }}
          email-password: ${{ secrets.API_EMAIL_PASSWORD }}
          email-secure: ${{ secrets.API_EMAIL_SECURE }}
          email-bypass: false
          email-account-verification: true
          email-from: ${{ secrets.API_EMAIL_FROM }}
          session-secret: ${{ secrets.API_SESSION_SECRET }}

  deploy-app-production:
    name: deploy app production
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://app.zetecom.fr
    if: github.ref == 'refs/heads/master'
    needs: [app, code-quality, e2e, deploy-api-production]
    steps:
      - uses: nilscox/zetecom/.github/actions/deployment/deploy-app@master
        with:
          deploy-host: ${{ secrets.DEPLOY_HOST }}
          deploy-key: ${{ secrets.DEPLOY_KEY }}
          base-dir: ${{ secrets.DEPLOY_BASE_DIR }}
          api-url: https://app.zetecom.fr
          website-url: https://zetecom.fr
          analytics-provider: ${{ secrets.APP_ANALYTICS_PROVIDER }}
          analytics-url: ${{ secrets.APP_ANALYTICS_URL }}
          analytics-site-id: ${{ secrets.APP_ANALYTICS_SITE_ID }}
